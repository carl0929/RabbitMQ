<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
	例如namespace="me.gacl.mapping.orderMapper"就是me.gacl.mapping(包名)+orderMapper(orderMapper.xml文件去除后缀)
-->
<!-- 用户数据映射 -->
<mapper namespace="com.carl.exportexcle.dao.UserInfoDao">

    <!--通过<resultMap>映射实体类属性名和表的字段名对应关系 -->
    <resultMap id="userInfoResultMap" type="com.carl.exportexcle.entity.UserInfo" >
        <!-- 用id属性来映射主键字段 -->
        <id property="mId" column="_id" jdbcType="INTEGER" />
        <!-- 用result属性来映射非主键字段 -->
        <result property="mName" column="name" />
        <result property="mAppName" column="app" />
        <result property="mChNo" column="ch_no" />
        <result property="mState" column="state" />
        <result property="mIsLoyalty" column="loyalty"/>
        <result property="mSessionId" column="session_id" />
        <result property="mSessionEstablishTime" column="session_es_time" />
        <!-- 关联手机信息 -->
        <result property="mPhoneInfoId" column="phone_info_id" />
        <!-- 关联手机卡信息 -->
        <result property="mPhoneNumber" column="phone_number" />
        <result property="mPrivileges" column="privileges" />
        <result property="mPhoneInfoValid" column="p_info_valid" />
        <result property="mPhoneInfoInvalidReason" column="p_info_inv_reason" />
        <result property="mShellVersion" column="sh_v" />
        <result property="mCreateTime" column="create_time" />
        <result property="mRecentHandshake" column="recent_hs_time" />
        <result property="mIp" column="ip" />
        <result property="mCountry" column="country" />
    </resultMap>

    <!--通过<resultMap>映射实体类属性名和表的字段名对应关系 -->
    <parameterMap id="userInfoParamMap" type="com.carl.exportexcle.entity.UserInfo" >
        <!-- 用result属性来映射非主键字段 -->
        <parameter property="mName" resultMap="userInfoResultMap" />
        <parameter property="mAppName" resultMap="userInfoResultMap" />
        <parameter property="mChNo" resultMap="userInfoResultMap" />
        <parameter property="mState" resultMap="userInfoResultMap" />
        <parameter property="mIsLoyalty" resultMap="userInfoResultMap" />
        <parameter property="mSessionId" resultMap="userInfoResultMap" />
        <parameter property="mSessionEstablishTime" resultMap="userInfoResultMap" />
        <parameter property="mPhoneInfoId" resultMap="userInfoResultMap" />
        <parameter property="mPhoneNumber" resultMap="userInfoResultMap" />
        <parameter property="mPhoneInfoValid" resultMap="userInfoResultMap" />
        <parameter property="mPhoneInfoInvalidReason" resultMap="userInfoResultMap" />
        <parameter property="mPrivileges" resultMap="userInfoResultMap" />
        <parameter property="mShellVersion" resultMap="userInfoResultMap" />
        <parameter property="mCreateTime" resultMap="userInfoResultMap" />
        <parameter property="mRecentHandshake" resultMap="userInfoResultMap" />
        <parameter property="mIp" resultMap="userInfoResultMap" />
        <parameter property="mCountry" resultMap="userInfoResultMap" />
    </parameterMap>



    <!-- 根据序列号查询用户信息 -->
    <select id="findUserInfoByInd" parameterType="int" resultMap="userInfoResultMap">
        select * from ${tableName} where _id=#{ind}
    </select>

    <!-- 根据关键字段查询信息行序列号-->
    <select id="findUserInfoIndByKWs" resultType="Integer">
        select _id from ${tableName}
        where name=#{userName} and app=#{appName} and ch_no=#{chno}
    </select>

    <!-- 根据关键字段查询信息-->
    <select id="findUserInfoByKWs" resultMap="userInfoResultMap">
        select * from ${tableName}
        where name=#{userName} and app=#{appName} and ch_no=#{chno}
    </select>

    <!-- 根据uid查询所有的记录-->
    <select id="findRecordsByUID" parameterType="int" resultMap="userInfoResultMap">
        select * from ${tableName}
        where name=#{uid}
    </select>

    <!-- 查询某个时间段内某个渠道的用户数据 -->
    <select id="findRecordsByChanAndCreateTime" resultMap="userInfoResultMap">
        SELECT
        DISTINCT(name), state, loyalty, app, ch_no, session_id, session_es_time, create_time, phone_info_id,
        phone_number, privileges, sh_v, recent_hs_time
        FROM ${tableName}
        WHERE ch_no = #{chan} AND create_time BETWEEN #{startTime} AND #{endTime}
    </select>

    <!-- 查询截止某个时间点的所有留存用户信息 -->
    <select id="findRecordsByChanAndAliveTime" resultMap="userInfoResultMap">
        SELECT
        DISTINCT(name), state, loyalty, app, ch_no, session_id, session_es_time, create_time, phone_info_id,
        phone_number, privileges, sh_v, recent_hs_time
        FROM ${tableName}
        WHERE ch_no = #{chan} AND recent_hs_time >= #{time}
    </select>

    <!--查询某个时间段某个app的新增用户-->
    <select id="getUserCountByDateAndApp" resultMap="userInfoResultMap">
       SELECT DISTINCT(name),loyalty FROM user_info
        WHERE
        create_time BETWEEN #{beginTime} AND #{endTime} AND app =#{appName}
    </select>

    <!--查询某个时间段获取权限用户-->
    <select id="getRightCountByDate" resultType="Integer">
        SELECT count(name) FROM user_info
        WHERE
        create_time BETWEEN #{beginTime} AND #{endTime} AND loyalty = '00001'
    </select>

    <!--查询某个时间段取过任务的用户-->
   <!-- <select id="gotTaskUserCountByDate" resultType="com.carl.exportexcle.entity.TaskExecResultInfo">
        SELECT DISTINCT(user_id),task_state FROM task_statistics_info
            WHERE task_id
            IN ('task_th_ais_o545', 'task_th_ais_o697')
            and user_id in(
            SELECT DISTINCT(name) FROM user_info WHERE create_time BETWEEN #{beginTime} AND #{endTime} AND loyalty = '1'
            )
    </select>-->

    <!--查询某个时间完成订阅用户数-->
    <select id="gotTaskUserCountByDate" resultType="Integer">
        SELECT count(DISTINCT(user_id)) FROM task_statistics_info
        WHERE task_id IN ('task_th_ais_o545', 'task_th_ais_o697')
        AND change_time BETWEEN #{beginTime} AND #{endTime}
    </select>


    <!--查询完成offer数量-->
    <select id="gotOfferCountByDate" resultType="Integer">
        SELECT count(*) FROM task_statistics_info
        WHERE
        task_state = '1' AND user_id IN
        (
            SELECT name FROM user_info WHERE
            create_time BETWEEN #{beginTime} AND #{endTime}
        ) AND task_id IN ('task_th_ais_o545', 'task_th_ais_o697')
    </select>



</mapper>